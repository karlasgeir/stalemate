// Mocks generated by Mockito 5.4.1 from annotations
// in stalemate/test/src/stalemate_registry_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:stalemate/src/stalemate_loader/stalemate_loader.dart' as _i2;
import 'package:stalemate/src/stalemate_loader/stalemate_state_manager.dart'
    as _i6;
import 'package:stalemate/src/stalemate_refresher/stalemate_refresh_result.dart'
    as _i3;

import 'stalemate_registry_test.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeStaleMateLoaderState_0 extends _i1.SmartFake
    implements _i2.StaleMateLoaderState {
  _FakeStaleMateLoaderState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStaleMateRefreshResult_1<T> extends _i1.SmartFake
    implements _i3.StaleMateRefreshResult<T> {
  _FakeStaleMateRefreshResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [StaleMateLoader1].
///
/// See the documentation for Mockito's code generation for more information.
class MockStaleMateLoader1 extends _i1.Mock implements _i4.StaleMateLoader1 {
  MockStaleMateLoader1() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get updateOnInit => (super.noSuchMethod(
        Invocation.getter(#updateOnInit),
        returnValue: false,
      ) as bool);
  @override
  bool get showLocalDataOnError => (super.noSuchMethod(
        Invocation.getter(#showLocalDataOnError),
        returnValue: false,
      ) as bool);
  @override
  _i5.Stream<String> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<String>.empty(),
      ) as _i5.Stream<String>);
  @override
  String get value => (super.noSuchMethod(
        Invocation.getter(#value),
        returnValue: '',
      ) as String);
  @override
  bool get isEmpty => (super.noSuchMethod(
        Invocation.getter(#isEmpty),
        returnValue: false,
      ) as bool);
  @override
  _i2.StaleMateLoaderState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeStaleMateLoaderState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.StaleMateLoaderState);
  @override
  void addStateListener(_i6.StateListener? listener) => super.noSuchMethod(
        Invocation.method(
          #addStateListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeStateListener(_i6.StateListener? listener) => super.noSuchMethod(
        Invocation.method(
          #removeStateListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> addData(String? data) => (super.noSuchMethod(
        Invocation.method(
          #addData,
          [data],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i3.StaleMateRefreshResult<String>> refresh() =>
      (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValue: _i5.Future<_i3.StaleMateRefreshResult<String>>.value(
            _FakeStaleMateRefreshResult_1<String>(
          this,
          Invocation.method(
            #refresh,
            [],
          ),
        )),
      ) as _i5.Future<_i3.StaleMateRefreshResult<String>>);
  @override
  _i5.Future<void> reset() => (super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void setLogLevel(_i2.StaleMateLogLevel? logLevel) => super.noSuchMethod(
        Invocation.method(
          #setLogLevel,
          [logLevel],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [StaleMateLoader2].
///
/// See the documentation for Mockito's code generation for more information.
class MockStaleMateLoader2 extends _i1.Mock implements _i4.StaleMateLoader2 {
  MockStaleMateLoader2() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get updateOnInit => (super.noSuchMethod(
        Invocation.getter(#updateOnInit),
        returnValue: false,
      ) as bool);
  @override
  bool get showLocalDataOnError => (super.noSuchMethod(
        Invocation.getter(#showLocalDataOnError),
        returnValue: false,
      ) as bool);
  @override
  _i5.Stream<int> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<int>.empty(),
      ) as _i5.Stream<int>);
  @override
  int get value => (super.noSuchMethod(
        Invocation.getter(#value),
        returnValue: 0,
      ) as int);
  @override
  bool get isEmpty => (super.noSuchMethod(
        Invocation.getter(#isEmpty),
        returnValue: false,
      ) as bool);
  @override
  _i2.StaleMateLoaderState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeStaleMateLoaderState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.StaleMateLoaderState);
  @override
  void addStateListener(_i6.StateListener? listener) => super.noSuchMethod(
        Invocation.method(
          #addStateListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeStateListener(_i6.StateListener? listener) => super.noSuchMethod(
        Invocation.method(
          #removeStateListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> addData(int? data) => (super.noSuchMethod(
        Invocation.method(
          #addData,
          [data],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i3.StaleMateRefreshResult<int>> refresh() => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValue: _i5.Future<_i3.StaleMateRefreshResult<int>>.value(
            _FakeStaleMateRefreshResult_1<int>(
          this,
          Invocation.method(
            #refresh,
            [],
          ),
        )),
      ) as _i5.Future<_i3.StaleMateRefreshResult<int>>);
  @override
  _i5.Future<void> reset() => (super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void setLogLevel(_i2.StaleMateLogLevel? logLevel) => super.noSuchMethod(
        Invocation.method(
          #setLogLevel,
          [logLevel],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [StaleMateHandlerImpl1].
///
/// See the documentation for Mockito's code generation for more information.
class MockStaleMateHandlerImpl1 extends _i1.Mock
    implements _i4.StaleMateHandlerImpl1 {
  MockStaleMateHandlerImpl1() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get emptyValue => (super.noSuchMethod(
        Invocation.getter(#emptyValue),
        returnValue: '',
      ) as String);
  @override
  _i5.Future<String> getLocalData() => (super.noSuchMethod(
        Invocation.method(
          #getLocalData,
          [],
        ),
        returnValue: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
  @override
  _i5.Future<String> getRemoteData() => (super.noSuchMethod(
        Invocation.method(
          #getRemoteData,
          [],
        ),
        returnValue: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
  @override
  _i5.Future<void> storeLocalData(String? data) => (super.noSuchMethod(
        Invocation.method(
          #storeLocalData,
          [data],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> removeLocalData() => (super.noSuchMethod(
        Invocation.method(
          #removeLocalData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [StaleMateHandlerImpl2].
///
/// See the documentation for Mockito's code generation for more information.
class MockStaleMateHandlerImpl2 extends _i1.Mock
    implements _i4.StaleMateHandlerImpl2 {
  MockStaleMateHandlerImpl2() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get emptyValue => (super.noSuchMethod(
        Invocation.getter(#emptyValue),
        returnValue: 0,
      ) as int);
  @override
  _i5.Future<int> getLocalData() => (super.noSuchMethod(
        Invocation.method(
          #getLocalData,
          [],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<int> getRemoteData() => (super.noSuchMethod(
        Invocation.method(
          #getRemoteData,
          [],
        ),
        returnValue: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);
  @override
  _i5.Future<void> storeLocalData(int? data) => (super.noSuchMethod(
        Invocation.method(
          #storeLocalData,
          [data],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> removeLocalData() => (super.noSuchMethod(
        Invocation.method(
          #removeLocalData,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
